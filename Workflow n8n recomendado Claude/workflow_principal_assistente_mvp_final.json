{
  "name": "Assistente Desenvolvimento Pessoal - Workflow Principal",
  "nodes": [
    {
      "parameters": {},
      "id": "whatsapp-trigger",
      "name": "WhatsApp Business Cloud Trigger",
      "type": "n8n-nodes-base.whatsAppBusinessCloudTrigger",
      "typeVersion": 1,
      "position": [140, 300],
      "webhookId": "assistente-desenvolvimento-webhook"
    },
    {
      "parameters": {
        "operation": "select",
        "table": "users",
        "where": {
          "conditions": [
            {
              "column": "phone",
              "operator": "=",
              "value": "={{ $json.messages[0].from }}"
            }
          ]
        },
        "limit": 1
      },
      "id": "load-user-data",
      "name": "Load User Data",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [360, 300],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.length }}",
              "operation": "equal",
              "value2": 0
            }
          ]
        }
      },
      "id": "is-new-user",
      "name": "Is New User?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [580, 300]
    },
    {
      "parameters": {
        "operation": "insert",
        "table": "users",
        "fields": {
          "phone": "={{ $node['WhatsApp Business Cloud Trigger'].json.messages[0].from }}",
          "name": "={{ $node['WhatsApp Business Cloud Trigger'].json.contacts?.[0]?.profile?.name || '' }}",
          "onboarding_step": 1,
          "onboarding_completed": false,
          "created_at": "={{ new Date().toISOString() }}",
          "updated_at": "={{ new Date().toISOString() }}"
        }
      },
      "id": "create-new-user",
      "name": "Create New User",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [800, 200],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "id",
              "value": "={{ $json[0].id }}"
            },
            {
              "name": "onboarding_step",
              "value": 1
            }
          ],
          "string": [
            {
              "name": "phone",
              "value": "={{ $node['WhatsApp Business Cloud Trigger'].json.messages[0].from }}"
            },
            {
              "name": "name",
              "value": "={{ $node['WhatsApp Business Cloud Trigger'].json.contacts?.[0]?.profile?.name || '' }}"
            }
          ],
          "boolean": [
            {
              "name": "onboarding_completed",
              "value": false
            }
          ],
          "object": [
            {
              "name": "goals",
              "value": "{}"
            },
            {
              "name": "bad_habits",
              "value": "{}"
            },
            {
              "name": "available_times",
              "value": "{}"
            }
          ]
        }
      },
      "id": "set-new-user-data",
      "name": "Set New User Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1020, 200]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "id",
              "value": "={{ $json[0].id }}"
            },
            {
              "name": "onboarding_step",
              "value": "={{ $json[0].onboarding_step }}"
            }
          ],
          "string": [
            {
              "name": "phone",
              "value": "={{ $json[0].phone }}"
            },
            {
              "name": "name",
              "value": "={{ $json[0].name }}"
            },
            {
              "name": "financial_situation",
              "value": "={{ $json[0].financial_situation }}"
            }
          ],
          "boolean": [
            {
              "name": "onboarding_completed",
              "value": "={{ $json[0].onboarding_completed }}"
            }
          ],
          "object": [
            {
              "name": "goals",
              "value": "={{ $json[0].goals }}"
            },
            {
              "name": "bad_habits",
              "value": "={{ $json[0].bad_habits }}"
            },
            {
              "name": "available_times",
              "value": "={{ $json[0].available_times }}"
            }
          ]
        }
      },
      "id": "set-existing-user-data",
      "name": "Set Existing User Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [800, 400]
    },
    {
      "parameters": {
        "operation": "select",
        "table": "conversations",
        "where": {
          "conditions": [
            {
              "column": "user_id",
              "operator": "=",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "sort": {
          "fields": [
            {
              "field": "timestamp",
              "direction": "DESC"
            }
          ]
        },
        "limit": 10
      },
      "id": "load-conversation-history",
      "name": "Load Conversation History",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1240, 300],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "mode": "expression",
        "expression": "={{ $json.onboarding_completed ? 'active_user' : 'onboarding_step_' + $json.onboarding_step }}"
      },
      "id": "route-user-status",
      "name": "Route by User Status",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [1460, 300],
      "parameters": {
        "options": {
          "fallbackOutput": 3
        },
        "rules": {
          "values": [
            {
              "conditions": {
                "string": [
                  {
                    "value1": "={{ $json.onboarding_completed ? 'active_user' : 'onboarding_step_' + $json.onboarding_step }}",
                    "operation": "equal",
                    "value2": "onboarding_step_1"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "step_1_goals"
            },
            {
              "conditions": {
                "string": [
                  {
                    "value1": "={{ $json.onboarding_completed ? 'active_user' : 'onboarding_step_' + $json.onboarding_step }}",
                    "operation": "equal",
                    "value2": "onboarding_step_2"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "step_2_bad_habits"
            },
            {
              "conditions": {
                "string": [
                  {
                    "value1": "={{ $json.onboarding_completed ? 'active_user' : 'onboarding_step_' + $json.onboarding_step }}",
                    "operation": "equal",
                    "value2": "onboarding_step_3"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "step_3_financial"
            },
            {
              "conditions": {
                "string": [
                  {
                    "value1": "={{ $json.onboarding_completed ? 'active_user' : 'onboarding_step_' + $json.onboarding_step }}",
                    "operation": "equal",
                    "value2": "onboarding_step_4"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "step_4_schedule"
            },
            {
              "conditions": {
                "string": [
                  {
                    "value1": "={{ $json.onboarding_completed ? 'active_user' : 'onboarding_step_' + $json.onboarding_step }}",
                    "operation": "equal",
                    "value2": "onboarding_step_5"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "step_5_create_plan"
            },
            {
              "conditions": {
                "string": [
                  {
                    "value1": "={{ $json.onboarding_completed ? 'active_user' : 'onboarding_step_' + $json.onboarding_step }}",
                    "operation": "equal",
                    "value2": "active_user"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "active_user"
            }
          ]
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "system_prompt",
              "value": "Voc√™ √© um assistente de desenvolvimento pessoal amig√°vel, motivador e proativo. Seu tom √© leve, descontra√≠do e encorajador.\n\nCONTEXTO: Usu√°rio est√° no Step 1 do onboarding - Coletando h√°bitos que quer construir.\n\nOBJETIVO: Coletar informa√ß√µes sobre os 3 principais h√°bitos que o usu√°rio quer construir.\n\nDIRETRIZES:\n- Fa√ßa UMA pergunta por vez\n- Seja emp√°tico e encorajador\n- Mantenha o tom conversacional e amig√°vel\n\nRESPOSTA ESPERADA: Para come√ßarmos, me diga: quais s√£o os 3 principais h√°bitos que voc√™ gostaria de construir ou melhorar na sua vida? Pode ser qualquer coisa, desde ler mais at√© come√ßar a meditar. üìöüßò‚Äç‚ôÄÔ∏è\n\nQuando o usu√°rio responder, extraia os h√°bitos mencionados e salve no formato JSON para o campo goals."
            }
          ]
        }
      },
      "id": "prompt-step1",
      "name": "Prompt Step 1 - Goals",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1680, 100]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "system_prompt",
              "value": "Voc√™ √© um assistente de desenvolvimento pessoal amig√°vel, motivador e proativo. Seu tom √© leve, descontra√≠do e encorajador.\n\nDADOS DO USU√ÅRIO:\n- H√°bitos a construir: {{ $json.goals }}\n\nCONTEXTO: Usu√°rio est√° no Step 2 do onboarding - Coletando h√°bitos que quer abandonar.\n\nOBJETIVO: Coletar informa√ß√µes sobre h√°bitos negativos que quer deixar para tr√°s.\n\nDIRETRIZES:\n- Seja emp√°tico ao abordar v√≠cios/h√°bitos negativos\n- Mantenha tom positivo e sem julgamentos\n- Enfatize que √© normal ter h√°bitos que queremos mudar\n\nRESPOSTA ESPERADA: √ìtimas escolhas! üëè Agora, existe algum h√°bito ou v√≠cio que voc√™ sente que est√° te atrapalhando e que gostaria de deixar para tr√°s? Lembre-se: todos temos aspectos que queremos melhorar, e reconhecer isso j√° √© um grande passo! üí™\n\nQuando o usu√°rio responder, extraia os h√°bitos mencionados e salve no formato JSON para o campo bad_habits."
            }
          ]
        }
      },
      "id": "prompt-step2",
      "name": "Prompt Step 2 - Bad Habits",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1680, 200]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "system_prompt",
              "value": "Voc√™ √© um assistente de desenvolvimento pessoal amig√°vel, motivador e proativo. Seu tom √© leve, descontra√≠do e encorajador.\n\nDADOS DO USU√ÅRIO:\n- H√°bitos a construir: {{ $json.goals }}\n- H√°bitos a abandonar: {{ $json.bad_habits }}\n\nCONTEXTO: Usu√°rio est√° no Step 3 do onboarding - Coletando situa√ß√£o financeira.\n\nOBJETIVO: Entender a situa√ß√£o financeira para criar plano adequado ao or√ßamento.\n\nDIRETRIZES:\n- Seja delicado ao abordar quest√µes financeiras\n- Explique que √© para personalizar o plano\n- Ofere√ßa op√ß√µes claras\n\nRESPOSTA ESPERADA: Para eu criar um plano que caiba no seu bolso, como voc√™ classificaria sua situa√ß√£o financeira atual?\n\nüí∞ **Baixa** - Prefiro op√ß√µes gratuitas e econ√¥micas\nüíµ **M√©dia** - Posso investir um valor moderado mensalmente\nüíé **Alta** - Tenho flexibilidade para investir em qualidade\n\nEscolha uma das op√ß√µes acima para que eu possa personalizar seu plano! üòä"
            }
          ]
        }
      },
      "id": "prompt-step3",
      "name": "Prompt Step 3 - Financial Situation",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1680, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "system_prompt",
              "value": "Voc√™ √© um assistente de desenvolvimento pessoal amig√°vel, motivador e proativo. Seu tom √© leve, descontra√≠do e encorajador.\n\nDADOS DO USU√ÅRIO:\n- H√°bitos a construir: {{ $json.goals }}\n- H√°bitos a abandonar: {{ $json.bad_habits }}\n- Situa√ß√£o financeira: {{ $json.financial_situation }}\n\nCONTEXTO: Usu√°rio est√° no Step 4 do onboarding - Coletando hor√°rios dispon√≠veis.\n\nOBJETIVO: Entender a rotina e hor√°rios dispon√≠veis do usu√°rio.\n\nDIRETRIZES:\n- Pergunte sobre hor√°rios livres espec√≠ficos\n- Seja flex√≠vel (texto ou √°udio)\n- Foque em praticidade\n- Considere rotina real do usu√°rio\n\nRESPOSTA ESPERADA: Perfeito! üéØ Agora me diga: quais s√£o seus hor√°rios mais livres durante a semana?\n\nPor exemplo:\n‚è∞ \"Manh√£ das 6h √†s 8h\"\n‚è∞ \"Almo√ßo das 12h √†s 13h\"\n‚è∞ \"Noite das 19h √†s 21h\"\n\nPode me dizer em texto ou mandar um √°udio, como preferir! üòä"
            }
          ]
        }
      },
      "id": "prompt-step4",
      "name": "Prompt Step 4 - Available Times",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1680, 400]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "system_prompt",
              "value": "Voc√™ √© um assistente de desenvolvimento pessoal amig√°vel, motivador e proativo. Seu tom √© leve, descontra√≠do e encorajador.\n\nDADOS COLETADOS:\n- Nome: {{ $json.name }}\n- H√°bitos a construir: {{ $json.goals }}\n- H√°bitos a abandonar: {{ $json.bad_habits }}\n- Situa√ß√£o financeira: {{ $json.financial_situation }}\n- Hor√°rios dispon√≠veis: {{ $json.available_times }}\n\nCONTEXTO: Step 5 - Criar plano personalizado e finalizar onboarding.\n\nINSTRU√á√ïES CR√çTICAS:\n1. Crie um plano semanal REALISTA e ALCAN√á√ÅVEL\n2. Considere a situa√ß√£o financeira para sugest√µes\n3. Adapte aos hor√°rios dispon√≠veis\n4. Para cada h√°bito, sugira:\n   - Frequ√™ncia espec√≠fica (daily, 3x_week, etc.)\n   - Hor√°rios ideais para lembretes\n   - A√ß√µes pr√°ticas e concretas\n5. Apresente o plano de forma clara e motivadora\n6. Use emojis para tornar visual\n7. Termine perguntando se aprova o plano\n\nAP√ìS A RESPOSTA DO USU√ÅRIO APROVAR:\n- Marque onboarding_completed = true\n- Crie registros na tabela habits\n- Finalize o onboarding\n\nOBJETIVO: Gerar um plano personalizado que ser√° seguido desde o primeiro dia."
            }
          ]
        }
      },
      "id": "prompt-step5",
      "name": "Prompt Step 5 - Create Plan",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1680, 500]
    },
    {
      "parameters": {
        "operation": "select",
        "table": "habits",
        "where": {
          "conditions": [
            {
              "column": "user_id",
              "operator": "=",
              "value": "={{ $json.id }}"
            },
            {
              "column": "is_active",
              "operator": "=",
              "value": true
            }
          ]
        }
      },
      "id": "load-active-habits",
      "name": "Load Active Habits",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1680, 600],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "table": "habit_logs",
        "where": {
          "conditions": [
            {
              "column": "user_id",
              "operator": "=",
              "value": "={{ $node['Load Conversation History'].json.id }}"
            },
            {
              "column": "date",
              "operator": "=",
              "value": "={{ new Date().toISOString().split('T')[0] }}"
            }
          ]
        }
      },
      "id": "load-today-progress",
      "name": "Load Today Progress",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1900, 600],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "system_prompt",
              "value": "Voc√™ √© um assistente de desenvolvimento pessoal amig√°vel, motivador e proativo. Seu tom √© leve, descontra√≠do e encorajador.\n\nDADOS DO USU√ÅRIO:\n- Nome: {{ $node['Load Conversation History'].json.name }}\n- Situa√ß√£o Financeira: {{ $node['Load Conversation History'].json.financial_situation }}\n- Hor√°rios Dispon√≠veis: {{ $node['Load Conversation History'].json.available_times }}\n- H√°bitos a Construir: {{ $node['Load Conversation History'].json.goals }}\n- H√°bitos a Abandonar: {{ $node['Load Conversation History'].json.bad_habits }}\n\nH√ÅBITOS ATIVOS:\n{{ $node['Load Active Habits'].json.map(h => `- ${h.name} (${h.frequency}) - Lembretes: ${h.reminder_times.join(', ')}`).join('\\n') }}\n\nPROGRESSO DE HOJE:\n{{ $node['Load Today Progress'].json.map(log => `- ${log.completed ? '‚úÖ' : '‚è≥'} H√°bito ID ${log.habit_id}`).join('\\n') }}\n\nHIST√ìRICO RECENTE:\n{{ $node['Load Conversation History'].json.slice(-5).map(conv => `${conv.sender}: ${conv.message}`).join('\\n') }}\n\nCONTEXTO: Usu√°rio ativo com plano em andamento.\n\nFUNCIONALIDADES DISPON√çVEIS:\n- Confirmar tarefas: \"feito\", \"conclu√≠do\", \"‚úÖ\", \"done\"\n- Pedir ajuda ou motiva√ß√£o\n- Reorganizar agenda por imprevistos\n- Solicitar dicas espec√≠ficas\n- Compartilhar conquistas\n- Ver progresso atual\n\nDIRETRIZES:\n- Responda contextualmente √† mensagem do usu√°rio\n- Se for confirma√ß√£o de tarefa, identifique qual h√°bito e celebre\n- Se for pedido de ajuda, ofere√ßa suporte espec√≠fico\n- Se for reorganiza√ß√£o, seja flex√≠vel e proativo\n- Para conquistas, celebre entusiasticamente\n- Use o nome do usu√°rio quando apropriado\n- Ofere√ßa solu√ß√µes pr√°ticas para desafios\n- Mantenha sempre tom motivador e personalizado\n\nSE DETECTAR CONFIRMA√á√ÉO DE TAREFA:\n1. Identifique qual h√°bito foi completado\n2. Registre na tabela habit_logs\n3. Celebre a conquista\n4. Motive para pr√≥ximas a√ß√µes"
            }
          ]
        }
      },
      "id": "prompt-active-user",
      "name": "Prompt Active User",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [2120, 600]
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "id",
              "field2": "id"
            }
          ]
        },
        "options": {}
      },
      "id": "merge-with-prompt",
      "name": "Merge with Prompt",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [1900, 300]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "message": "={{ $json.system_prompt }}"
            },
            {
              "message": "Mensagem do usu√°rio: {{ $node['WhatsApp Business Cloud Trigger'].json.messages[0].text.body }}",
              "role": "user"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 800
        }
      },
      "id": "langchain-agent",
      "name": "LangChain Agent GPT-4",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [2120, 300],
      "credentials": {
        "openAiApi": {
          "id": "openai-credential",
          "name": "OpenAI Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "operation": "insert",
        "table": "conversations",
        "fields": {
          "user_id": "={{ $json.id }}",
          "message": "={{ $node['WhatsApp Business Cloud Trigger'].json.messages[0].text.body }}",
          "sender": "user",
          "timestamp": "={{ new Date().toISOString() }}",
          "context": "={{ JSON.stringify({ onboarding_step: $json.onboarding_step, message_type: 'incoming' }) }}"
        }
      },
      "id": "save-user-message",
      "name": "Save User Message",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [2340, 200],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "operation": "insert",
        "table": "conversations",
        "fields": {
          "user_id": "={{ $json.id }}",
          "message": "={{ $node['LangChain Agent GPT-4'].json.choices[0].message.content }}",
          "sender": "assistant",
          "timestamp": "={{ new Date().toISOString() }}",
          "context": "={{ JSON.stringify({ onboarding_step: $json.onboarding_step, message_type: 'response' }) }}"
        }
      },
      "id": "save-assistant-message",
      "name": "Save Assistant Message",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [2340, 300],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Extrair informa√ß√µes da resposta da IA\nconst userMessage = $node['WhatsApp Business Cloud Trigger'].json.messages[0].text.body;\nconst aiResponse = $node['LangChain Agent GPT-4'].json.choices[0].message.content;\nconst currentStep = $json.onboarding_step;\n\nlet updateData = {\n  updated_at: new Date().toISOString()\n};\n\n// L√≥gica para extrair dados baseado no step do onboarding\nif (currentStep === 1) {\n  // Extrair goals da mensagem do usu√°rio\n  const goals = {\n    raw_response: userMessage,\n    extracted_goals: userMessage.toLowerCase().match(/\\b(exercit|ler|leit|medit|estud|acord|dorm|water|√°gua|caminha|treina|academia)\\w*/g) || []\n  };\n  updateData.goals = JSON.stringify(goals);\n  updateData.onboarding_step = 2;\n} else if (currentStep === 2) {\n  // Extrair bad_habits da mensagem do usu√°rio\n  const badHabits = {\n    raw_response: userMessage,\n    extracted_habits: userMessage.toLowerCase().match(/\\b(fuma|cigarro|procrastin|atrasa|celular|doce|refri|bebe|√°lcool|sedenta)\\w*/g) || []\n  };\n  updateData.bad_habits = JSON.stringify(badHabits);\n  updateData.onboarding_step = 3;\n} else if (currentStep === 3) {\n  // Extrair situa√ß√£o financeira\n  let financial = 'media'; // default\n  if (userMessage.toLowerCase().includes('baixa') || userMessage.toLowerCase().includes('econ√¥mica') || userMessage.toLowerCase().includes('gratuita')) {\n    financial = 'baixa';\n  } else if (userMessage.toLowerCase().includes('alta') || userMessage.toLowerCase().includes('flexibilidade') || userMessage.toLowerCase().includes('qualidade')) {\n    financial = 'alta';\n  }\n  updateData.financial_situation = financial;\n  updateData.onboarding_step = 4;\n} else if (currentStep === 4) {\n  // Extrair hor√°rios dispon√≠veis\n  const availableTimes = {\n    raw_response: userMessage,\n    morning: userMessage.toLowerCase().includes('manh√£') || userMessage.toLowerCase().includes('manha'),\n    afternoon: userMessage.toLowerCase().includes('tarde'),\n    evening: userMessage.toLowerCase().includes('noite'),\n    specific_times: userMessage.match(/\\d{1,2}h?\\s*(?:√†s?|-)\\s*\\d{1,2}h?/g) || []\n  };\n  updateData.available_times = JSON.stringify(availableTimes);\n  updateData.onboarding_step = 5;\n} else if (currentStep === 5) {\n  // Verificar se usu√°rio aprovou o plano\n  if (userMessage.toLowerCase().includes('sim') || \n      userMessage.toLowerCase().includes('aprovo') || \n      userMessage.toLowerCase().includes('aceito') ||\n      userMessage.toLowerCase().includes('vamos')) {\n    updateData.onboarding_completed = true;\n    updateData.onboarding_step = 6;\n  }\n}\n\n// Detectar confirma√ß√£o de tarefa para usu√°rios ativos\nif ($json.onboarding_completed && \n    (userMessage.toLowerCase().includes('feito') || \n     userMessage.toLowerCase().includes('conclu√≠do') || \n     userMessage.toLowerCase().includes('‚úÖ') ||\n     userMessage.toLowerCase().includes('done') ||\n     userMessage.toLowerCase().includes('pronto'))) {\n  updateData.task_completed = true;\n}\n\nreturn [{\n  json: {\n    user_id: $json.id,\n    phone: $json.phone,\n    update_data: updateData,\n    task_completed: updateData.task_completed || false\n  }\n}];"
      },
      "id": "process-user-data",
      "name": "Process User Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [2560, 300]
    },
    {
      "parameters": {
        "operation": "update",
        "table": "users",
        "updateKey": "id",
        "fields": "={{ $json.update_data }}",
        "where": {
          "conditions": [
            {
              "column": "id",
              "operator": "=",
              "value": "={{ $json.user_id }}"
            }
          ]
        }
      },
      "id": "update-user-data",
      "name": "Update User Data",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [2780, 300],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.update_data.onboarding_completed }}",
              "value2": true
            }
          ]
        }
      },
      "id": "check-onboarding-completed",
      "name": "Check Onboarding Completed",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [3000, 200]
    },
    {
      "parameters": {
        "jsCode": "// Criar h√°bitos baseados nos dados coletados durante o onboarding\nconst userData = $node['Update User Data'].json;\nconst userId = $json.user_id;\n\n// Buscar dados do usu√°rio para criar h√°bitos\nconst goals = JSON.parse(userData.goals || '{}');\nconst badHabits = JSON.parse(userData.bad_habits || '{}');\nconst availableTimes = JSON.parse(userData.available_times || '{}');\nconst financialSituation = userData.financial_situation;\n\nconst habitsToCreate = [];\n\n// Processar h√°bitos positivos\nif (goals.extracted_goals) {\n  goals.extracted_goals.forEach(goal => {\n    let habitName = '';\n    let frequency = 'daily';\n    let reminderTimes = ['09:00'];\n    \n    if (goal.includes('exercit') || goal.includes('treina') || goal.includes('academia')) {\n      habitName = 'Exercitar-se';\n      frequency = '3x_week';\n      reminderTimes = availableTimes.morning ? ['07:00'] : ['18:00'];\n    } else if (goal.includes('ler') || goal.includes('leit')) {\n      habitName = 'Ler 30 minutos';\n      frequency = 'daily';\n      reminderTimes = availableTimes.evening ? ['20:00'] : ['12:00'];\n    } else if (goal.includes('medit')) {\n      habitName = 'Meditar';\n      frequency = 'daily';\n      reminderTimes = availableTimes.morning ? ['06:30'] : ['21:00'];\n    } else if (goal.includes('√°gua') || goal.includes('water')) {\n      habitName = 'Beber √°gua';\n      frequency = 'daily';\n      reminderTimes = ['09:00', '14:00', '18:00'];\n    }\n    \n    if (habitName) {\n      habitsToCreate.push({\n        user_id: userId,\n        name: habitName,\n        type: 'good',\n        frequency: frequency,\n        reminder_times: reminderTimes,\n        is_active: true\n      });\n    }\n  });\n}\n\n// Processar h√°bitos negativos\nif (badHabits.extracted_habits) {\n  badHabits.extracted_habits.forEach(habit => {\n    let habitName = '';\n    let frequency = 'daily';\n    let reminderTimes = ['10:00'];\n    \n    if (habit.includes('fuma') || habit.includes('cigarro')) {\n      habitName = 'Evitar cigarro';\n      frequency = 'daily';\n      reminderTimes = ['09:00', '15:00', '21:00'];\n    } else if (habit.includes('procrastin')) {\n      habitName = 'Evitar procrastina√ß√£o';\n      frequency = 'daily';\n      reminderTimes = ['10:00', '16:00'];\n    } else if (habit.includes('celular')) {\n      habitName = 'Limitar uso do celular';\n      frequency = 'daily';\n      reminderTimes = ['12:00', '20:00'];\n    }\n    \n    if (habitName) {\n      habitsToCreate.push({\n        user_id: userId,\n        name: habitName,\n        type: 'bad',\n        frequency: frequency,\n        reminder_times: reminderTimes,\n        is_active: true\n      });\n    }\n  });\n}\n\nreturn habitsToCreate.map(habit => ({ json: habit }));"
      },
      "id": "create-habits-data",
      "name": "Create Habits Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [3220, 200]
    },
    {
      "parameters": {
        "operation": "insert",
        "table": "habits",
        "fields": {
          "user_id": "={{ $json.user_id }}",
          "name": "={{ $json.name }}",
          "type": "={{ $json.type }}",
          "frequency": "={{ $json.frequency }}",
          "reminder_times": "={{ JSON.stringify($json.reminder_times) }}",
          "is_active": true,
          "created_at": "={{ new Date().toISOString() }}"
        }
      },
      "id": "insert-habits",
      "name": "Insert Habits",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [3440, 200],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.task_completed }}",
              "value2": true
            }
          ]
        }
      },
      "id": "check-task-completed",
      "name": "Check Task Completed",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [3000, 400]
    },
    {
      "parameters": {
        "operation": "select",
        "table": "habits",
        "where": {
          "conditions": [
            {
              "column": "user_id",
              "operator": "=",
              "value": "={{ $json.user_id }}"
            },
            {
              "column": "is_active",
              "operator": "=",
              "value": true
            }
          ]
        },
        "limit": 1
      },
      "id": "get-latest-habit",
      "name": "Get Latest Habit",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [3220, 400],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "operation": "insert",
        "table": "habit_logs",
        "fields": {
          "habit_id": "={{ $json[0].id }}",
          "user_id": "={{ $node['Process User Data'].json.user_id }}",
          "completed": true,
          "date": "={{ new Date().toISOString().split('T')[0] }}",
          "completed_at": "={{ new Date().toISOString() }}",
          "notes": "Confirmado via WhatsApp",
          "created_at": "={{ new Date().toISOString() }}"
        }
      },
      "id": "log-habit-completion",
      "name": "Log Habit Completion",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [3440, 400],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credential",
          "name": "Supabase Foquinha AI"
        }
      }
    },
    {
      "parameters": {
        "to": "={{ $json.phone }}",
        "message": "={{ $node['LangChain Agent GPT-4'].json.choices[0].message.content }}",
        "options": {}
      },
      "id": "send-whatsapp-response",
      "name": "Send WhatsApp Response",
      "type": "n8n-nodes-base.whatsAppBusinessCloud",
      "typeVersion": 1,
      "position": [3000, 300],
      "credentials": {
        "whatsAppBusinessCloudApi": {
          "id": "whatsapp-send-credential",
          "name": "WhatsApp Business Cloud Send"
        }
      }
    }
  ],
  "connections": {
    "WhatsApp Business Cloud Trigger": {
      "main": [
        [
          {
            "node": "Load User Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load User Data": {
      "main": [
        [
          {
            "node": "Is New User?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is New User?": {
      "main": [
        [
          {
            "node": "Create New User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Existing User Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create New User": {
      "main": [
        [
          {
            "node": "Set New User Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set New User Data": {
      "main": [
        [
          {
            "node": "Load Conversation History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Existing User Data": {
      "main": [
        [
          {
            "node": "Load Conversation History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Conversation History": {
      "main": [
        [
          {
            "node": "Route by User Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route by User Status": {
      "main": [
        [
          {
            "node": "Prompt Step 1 - Goals",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prompt Step 2 - Bad Habits",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prompt Step 3 - Financial Situation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prompt Step 4 - Available Times",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prompt Step 5 - Create Plan",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Load Active Habits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Step 1 - Goals": {
      "main": [
        [
          {
            "node": "Merge with Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Step 2 - Bad Habits": {
      "main": [
        [
          {
            "node": "Merge with Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Step 3 - Financial Situation": {
      "main": [
        [
          {
            "node": "Merge with Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Step 4 - Available Times": {
      "main": [
        [
          {
            "node": "Merge with Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Step 5 - Create Plan": {
      "main": [
        [
          {
            "node": "Merge with Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Active Habits": {
      "main": [
        [
          {
            "node": "Load Today Progress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Today Progress": {
      "main": [
        [
          {
            "node": "Prompt Active User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Active User": {
      "main": [
        [
          {
            "node": "Merge with Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge with Prompt": {
      "main": [
        [
          {
            "node": "LangChain Agent GPT-4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LangChain Agent GPT-4": {
      "main": [
        [
          {
            "node": "Save User Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Save Assistant Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Process User Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process User Data": {
      "main": [
        [
          {
            "node": "Update User Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update User Data": {
      "main": [
        [
          {
            "node": "Check Onboarding Completed",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check Task Completed",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send WhatsApp Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Onboarding Completed": {
      "main": [
        [
          {
            "node": "Create Habits Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Habits Data": {
      "main": [
        [
          {
            "node": "Insert Habits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Task Completed": {
      "main": [
        [
          {
            "node": "Get Latest Habit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Latest Habit": {
      "main": [
        [
          {
            "node": "Log Habit Completion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "2.0.0",
  "meta": {
    "templateCredsSetupCompleted": false
  },
  "id": "assistente-desenvolvimento-pessoal-principal",
  "tags": [
    "WhatsApp",
    "AI",
    "Desenvolvimento Pessoal",
    "Supabase",
    "MVP Final"
  ]
}